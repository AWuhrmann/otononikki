(()=>{"use strict";document.addEventListener("DOMContentLoaded",(function(){const e=document.getElementById("record-note"),t=(document.getElementById("upload-note"),document.getElementById("transcriptBox"));let n,o=[];document.getElementById("timer-button");let a,r,i=!1;if("undefined"==typeof MediaRecorder)return void alert("Your browser does not support the MediaRecorder API. Try updating or switching your browser.");e.addEventListener("click",(function(){i||"Record"==e.innerHTML?(n.stop(),i=!1,clearInterval(a),e.innerHTML="Transcribing..."):(async function(){o=[];const c=await navigator.mediaDevices.getUserMedia({audio:!0});n=new MediaRecorder(c),n.ondataavailable=function(e){o.push(e.data)},n.onstop=async()=>{const n=Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map((e=>`[[${e.value}]]`)).join(", ");console.log("Recorded voice !");const c=new Blob(o,{type:"audio/mpeg-3"}),a=new FormData;a.append("audioFile",c,"audio.mp3"),a.append("contacts",n),fetch("/transcribe",{method:"POST",body:a}).then((e=>e.json())).then((n=>{const{transcription:o}=n;t.value=o,e.innerHTML="Record"})).catch((e=>console.error("Error:",e)))},n.start()}(),i=!0,r=Date.now(),e.innerHTML="0:00",a=setInterval((()=>{const t=Math.floor((Date.now()-r)/1e3);c="",t%60<10&&(c="0"),e.innerHTML=`${Math.floor(t/60)}:${c}${t%60}`}),1e3))}));const d=document.getElementById("search-box");let s=[];const l={};function u(e){const t=document.getElementById("checkbox-list");t.innerHTML="",e.forEach(((e,n)=>{const o=document.createElement("label");o.className="card",o.innerHTML=`\n            <input class="card__input" type="checkbox" name="option${n+1}" value="${e.name}" id="contact-${e.name}" ${l[e.name]?"checked":""}/>\n            <div class="card__body">\n                <header class="card__body-header">\n                    <h2 class="card__body-header-title">${e.name}</h2>\n                    <p class="card__body-header-subtitle">${e.name}</p>\n                </header>\n                <div class="card__body-cover"><img class="card__body-cover-image" src="${e.picture?e.picture:"/contacts/pictures/default.png"}"/>\n                    <span class="card__body-cover-checkbox"> \n                        <svg class="card__body-cover-checkbox--svg" viewBox="0 0 12 10">\n                            <polyline points="1.5 6 4.5 9 10.5 1"></polyline>\n                        </svg>\n                    </span>\n                </div>\n            </div>\n        `;const c=o.querySelector("input");c.addEventListener("change",(()=>{c.checked?l[e.name]=!0:delete l[e.name],p()})),t.appendChild(o)}))}const h=document.getElementById("tag-list");input_tag=h.querySelector("input");let m=!1;function p(){h.querySelectorAll("li:not(:last-child)").forEach((e=>e.remove()));let e="";Object.keys(l).forEach((t=>{e+=`<li>${t} <i class="fa fa-times "></i></li>`})),h.insertAdjacentHTML("afterbegin",e),h.querySelectorAll(".fa-times").forEach((e=>{const t=e.parentElement.textContent.trim();e.addEventListener("click",(()=>y(t)))}))}function y(e){const t=document.getElementById(`contact-${e}`);t.checked=!1;const n=new Event("change",{bubbles:!0,cancelable:!0});t.dispatchEvent(n),delete l[e],p(),d.focus()}function f(){const e=d.value.toLowerCase();""==e.trim()?u(s):u(v.search(e).map((e=>e.item)))}input_tag.addEventListener("keyup",(e=>{"Enter"===e.key?function(e){e.checked=!0;const t=new Event("change",{bubbles:!0,cancelable:!0});e.dispatchEvent(t),p(),input_tag.value="",f(),d.focus()}(document.getElementById("checkbox-list").firstChild.querySelector("input")):"Backspace"===e.key?""!==input_tag.value||m?""===input_tag.value&&m&&function(){const e=h.querySelectorAll("li:not(:last-child)");e.length>0&&(y(e[e.length-1].textContent.trim()),m=!1)}():function(){const e=h.querySelectorAll("li:not(:last-child)");e.length>0&&(e[e.length-1].classList.add("selected-tag"),m=!0)}():m=!1})),window.filterContacts=f,fetch("/contacts").then((e=>e.json())).then((e=>(s=e,u(e),fetch("/api/mentions/ordered-contacts")))).then((e=>e.json())).then((e=>{e=e.map((e=>e.name)),s=s.sort(((t,n)=>e.indexOf(t.name)-e.indexOf(n.name))),v=new Fuse(s,g),u(s)})).catch((e=>{console.error("Error fetching contacts:",e)}));const g={includeScore:!0,keys:["name"]};let v;window.onClickUploadButton=function(){const e=Object.keys(l).map((e=>`[[${e}]]`)).join(", ");Object.keys(l).forEach((e=>{fetch("/api/mentions/add-mention",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contact:e})}).then((e=>e.text())).then((e=>console.log("Upload response:",e))).catch((e=>console.error("Error:",e)))}));const n={translation:t.value,contacts:e,date:(new Date).toISOString().slice(0,10)};fetch("/uploadTranscription",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)}).then((e=>e.text())).then((e=>console.log("Upload response:",e))).catch((e=>console.error("Error:",e)))}})),document.addEventListener("DOMContentLoaded",(function(){const e=localStorage.getItem("jwtToken");e?fetch("/verifyToken",{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"}}).then((e=>{if(!e.ok)throw new Error("Token verification failed")})).catch((e=>{console.error("Error:",e),localStorage.removeItem("jwtToken"),window.location.href="login.html"})):window.location.href="login.html"})),function(){const e=new Date,t=`${["dimanche","lundi","mardi","mercredi","jeudi","vendredi","samedi"][e.getDay()]} ${e.getDate()} ${["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"][e.getMonth()]}`;document.getElementById("current-date").textContent=t}()})();